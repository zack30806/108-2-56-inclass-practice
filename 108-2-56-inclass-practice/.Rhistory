pick_2<-pick_1[pick2]
#students10$"志願"[pick_2]
#ntpu_eco<- pick2
#pick_1
pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick1<- students10$"國文" >= 12
pick_1<-students10$"姓名"[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick2]
#students10$"志願"[pick_2]
#ntpu_eco<- pick2
#pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick1<- students10$"國文" >= 12
pick_1<-students10$"姓名"[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick2]
ntpu_eco<-students10$"志願"[pick_2]
ntpu_eco
#pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick1<- students10$"國文" >= 12
pick_1<-students10$"姓名"[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick2]
ntpu_eco<-students10$姓名[pick_2]
ntpu_eco
#pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
pick1<- students10$"國文" >= 12
pick_1<-pick_eco[pick1]
#pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
#pick_2<-pick_1[pick2]
#ntpu_eco<-students10$姓名[pick_2]
#ntpu_eco
pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
pick_eco
pick1<- students10$"國文" >= 12
pick_1<-pick_eco[pick1]
#pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
#pick_2<-pick_1[pick2]
#ntpu_eco<-students10$姓名[pick_2]
#ntpu_eco
pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-pick_eco[pick1]
#pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
#pick_2<-pick_1[pick2]
#ntpu_eco<-students10$姓名[pick_2]
#ntpu_eco
pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
#pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
#pick_2<-pick_1[pick2]
#ntpu_eco<-students10$姓名[pick_2]
#ntpu_eco
pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
ntpu_ecolist
pick1<- ntpu_ecolist"國文" >= 12
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
#pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
#pick_2<-pick_1[pick2]
#ntpu_eco<-students10$姓名[pick_2]
#ntpu_eco
pick_1
#pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1],na.rm = T
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick2]
#ntpu_eco<-students10$姓名[pick_2]
#ntpu_eco
pick_1
pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
#ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick2]
ntpu_eco<-pick_2
ntpu_eco
pick_1
pick_2
#ntpu_eco
# ntpu_econtpu_eco
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
#ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick2]
ntpu_eco<-pick_2
ntpu_eco
#ntpu_eco
# ntpu_econtpu_eco
c("恭喜 ntpu_eco 同學錄取國立臺北大學經濟系")
# congrats
c("恭喜 XXX 同學錄取國立臺北大學經濟系")%in%ntpu_eco
# congrats
print("恭喜 c(ntpu_eco) 同學錄取國立臺北大學經濟系")%in%ntpu_eco
# congrats
print("恭喜  同學錄取國立臺北大學經濟系")%in%ntpu_eco
c(ntpu_eco)
# congrats
print("恭喜%in%ntpu_eco  同學錄取國立臺北大學經濟系")%in%ntpu_eco
c(ntpu_eco)
# congrats
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
pick1 <- students10$`志願`=="北大經濟"
students10$`姓名`[pick1]
students10$`國文`[pick1]
pick2 <- students10$`國文`[pick1] >= 12
students10$`姓名`[pick1][pick2]
pick3 <-
students10$`英文`[pick1][pick2]+students10$`數學`[pick1][pick2] >= 26
pick3
ntpu_econtpu_eco <- students10$`姓名`[pick1][pick2][pick3]
ntpu_econtpu_eco
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
#ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick2][pick1]
ntpu_eco<-pick_2
ntpu_eco
#ntpu_eco
# ntpu_econtpu_eco
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
violatedArticles <-unique(badEmployers$law)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
violatedArticles <- unique(badEmployers$law)
violatedArticles <-unique(badEmployers$law)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
class(badEmployers$dt)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
class(badEmployers$dt)
pick_eco <- students10$"志願"%in%c("北大經濟")
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
print(students10)
chinese <-ordered(factor(table$"國文"))
chinese
# chinese
pick_10 <- students10$"志願"%in%c("北大經濟","北大法律","北大社會")
ntpu_namelist<-students10$"姓名"[pick_10]
ntpu_namelist
# ntpu_namelist
pick_eco <- students10$"志願"%in%c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
#ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick1][pick2]
ntpu_eco<-pick_2
ntpu_eco
#ntpu_eco
# ntpu_econtpu_eco
pick_NTPU<-students10$`姓名`[students10$`姓名` %in% ntpu_econtpu_eco]
pick_NTPU<-students10$`姓名`[students10$`姓名` %in% ntpu_econtpu_eco]
pick_eco <- students10$"志願"==c("北大經濟")
ntpu_ecolist<-students10$"姓名"[pick_eco]
#ntpu_ecolist
pick1<- students10$"國文" >= 12
pick_1<-ntpu_ecolist[pick1]
pick2<- as.numeric(students10$"英文")+as.numeric(students10$"數學") >= 26
pick_2<-pick_1[pick1][pick2]
ntpu_eco<-pick_2
ntpu_eco
#ntpu_eco
# ntpu_econtpu_eco
pick_NTPU<-students10$`姓名`[students10$`姓名` %in% ntpu_econtpu_eco]
pick_NTPU<-students10$`姓名`[students10$`姓名` %in%ntpu_eco ]
class(pick_NTPU)
congrats <-paste0("恭喜",pick_NTPU,"同學錄取國立臺北大學經濟系")
class(congrats)
congrats
#ntpu_econtpu_eco
# congrats
pick_NTPU<-students10$`姓名`[students10$`姓名` %in%ntpu_eco ]
class(pick_NTPU)
congrats <-paste0("恭喜",pick_NTPU,"同學錄取國立臺北大學經濟系")
#class(congrats)
congrats
#ntpu_econtpu_eco
# congrats
pick_NTPU<-students10$`姓名`[students10$`姓名` %in%ntpu_eco ]
class(pick_NTPU)
congrats <-paste0("恭喜",pick_NTPU,"同學錄取國立臺北大學經濟系")
class(congrats)
congrats
#ntpu_econtpu_eco
# congrats
pick_NTPU<-students10$`姓名`[students10$`姓名` %in%ntpu_eco ]
congrats <-paste0("恭喜",pick_NTPU,"同學錄取國立臺北大學經濟系")
#class(pick_NTPU)
class(congrats)
congrats
#ntpu_econtpu_eco
# congrats
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
table_countsByArticle<-table(badEmployers$law)
class(table_countsByArticle)
names(table_countsByArticle)
table_countsByArticle
# table_countsByArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
mostViolatedArticle_content<-c("延長工作時間超過法令規定" )
mostViolatedArticle_content
# mostViolatedArticle_content
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonthloyers$dt))
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonthloyers$dt)
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonthloyers$dt
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonthloyers$dt
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonth$loyers$dt
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
library(lubridate)
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonth$loyers$dt
library(lubridate)
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonth
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
class(badEmployers$dt)
table2 <- badEmployers$dt
date<-ymd(as.character.Date(table2))
class(date)
popularSentenceMonth
mostViolatedArticle <- table_countsByArticle[which.max(table_countsByArticle)]
class(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
mostViolatedArticle
table1 <- table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table1[which.max(table1)])
class(mostViolatedArticle_content)
length(mostViolatedArticle_content)
mostViolatedArticle_content
table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
mostViolatedArticle_content<-c("延長工作時間超過法令規定" )
mostViolatedArticle_content
# mostViolatedArticle_content
max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-max(table_countsByArticle)
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
#mostViolatedArticle_content<-c("延長工作時間超過法令規定" )
#mostViolatedArticle_content
# mostViolatedArticle_content
table1 <- table(badEmployers$lawContent)
mostViolatedArticle_content <- names(table1[which.max(table1)])
class(mostViolatedArticle_content)
length(mostViolatedArticle_content)
mostViolatedArticle_content
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-max(table_countsByArticle)
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-which.max(table_countsByArticle)
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-which.max(table_countsByArticle)
#print(mostViolatedArticle)
#names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-which.max(table_countsByArticle)
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-which.max(table_countsByArticle)
#print(mostViolatedArticle)
names(mostViolatedArticle)
max(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-which.max(table_countsByArticle)
#print(mostViolatedArticle)
names(mostViolatedArticle)
class(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
mostViolatedArticle<-table_countsByArticle[which.max(table_countsByArticle)]
#print(mostViolatedArticle)
names(mostViolatedArticle)
class(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
knitr::opts_chunk$set(echo = TRUE)
str(example)
pick_above170 <- example$height >= 170
str(example)
pick_above170 <- example$height >= 170
example <- list(
name=c("小明","小花","小新","美美"),
height=c(175,166,170,160),
weight=c(77,NA,60,43),
birthday=lubridate::ymd(c("1998-03-11","1999-12-22","1995-08-22","2001-10-10")),
hobby=c("美食 旅遊","旅遊 時尚","3C 美食","音樂 旅遊"),
residence=c("Taipei","New Taipei","Taichung","Kaohsiung"),
allowance=factor(c("0-1000","1001-2000","2000+","1001-2000")),
bloodType=c("A","B","B","O")
)
str(example)
pick_above170 <- example$height >= 170
pick_bloodB <- example$bloodType == "B"
pick_loveFood <-
stringr::str_detect(example$hobby,"美食")
pick_na <- is.na(example$weight)
pick_after98 <-
example$birthday >= lubridate::ymd("1998-01-01")
set_TaipeiMetro <- c("Taipei","New Taipei")
pick_fromTaipeiMetro <-
example$residence %in% set_TaipeiMetro
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
twoNames <- "有人叫他段兄，但也有有人叫他段兄弟，最常...."
str_extract_all(twoNames, "段(兄|兄弟)")
fruit <- c("apple", "banana", "pear", "pinapple")
str_detect(fruit, "a")
str_detect(fruit, "^a")
str_detect(fruit, "a$")
str_detect(fruit, "b")
str_detect(fruit, "[aeiou]")
# Also vectorised over pattern
str_detect("aecfg", letters)
# Returns TRUE if the pattern do NOT match
str_detect(fruit, "^p", negate = TRUE)
twoNames
str_locate(
c("後面鄰居不能有弟"))
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
str_extract(P2)
jsonlite::fromJSON("https://www.dropbox.com/s/kv0xa0spa6q5l7q/semiGodsSemiDevils.json?dl=1") -> semiGodsSemiDevils
str(semiGodsSemiDevils)
str_extract(semiGodsSemiDevils$data)
knitr::opts_chunk$set(echo = TRUE)
library(stringr)
library(glue)
library(stringr)
library(glue)
library(stringr)
library(glue)
str_extract_all(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳list
str_extract(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳vector
str_extract_all(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳list
str_extract(
c("民國108年12月5日","民國98年10月5日"),
"(?<=民國)[0-9]{2,3}(?=年)"
) # 回傳vector
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr);
str_extract(semiGodsSemiDevils$data$section)
str_extract(semiGodsSemiDevils$data$section)
heartSutra <- c("舍利子，色不異空，空不異色；色即是空，空即是色。")
str_view_all(heartSutra,"色") # 檢視
heartSutra <- c("舍利子，色不異空，空不異色；色即是空，空即是色。")
str_view_all(heartSutra,"色") # 檢視
heartSutra <- c("舍利子，色不異空，空不異色；色即是空，空即是色。")
str_view_all(heartSutra,"色") # 檢視
heartSutra <- c("舍利子，色不異空，空不異色；色即是空，空即是色。")
str_view_all(heartSutra,"色") # 檢視
heartSutra <- c("舍利子，色不異空，空不異色；色即是空，空即是色。")
str_view_all(heartSutra,"色") # 檢視
