dd <- 15
event_list <- list(
time=ymd(paste0(yy,",",mm,dd)),
list(
name="小明",
`"是否完成"`=True,
完成所花時間(秒)=350,
yy <- 2020
mm <- "Mar."
dd <- 15
event_list <- list(
time=ymd("paste0(yy,",",mm,dd)"),
list(
name="小明",
`是否完成`=True,
`完成所花時間(秒)`=350,
tools=c(
"anchor","axe")
)
source("https://www.dropbox.com/s/bvs0m4oxw7yaqxw/108-2-hw1-3.R?dl=1")
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
ymd_hms(
`taiwan_time`<- "西元2019年4月12日 12點55分30秒"
`oslo_time` <- "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
ymd_hms(
`taiwan_time`= "西元2019年4月12日 12點55分30秒"
`oslo_time` = "18.11.2018 15:33:02"
taiwan_time <- "西元2019年4月12日 12點55分30秒"
oslo_time <- "18.11.2018 15:33:02"
ymd_hms(
taiwan_time= "西元2019年4月12日 12點55分30秒"
oslo_time = "18.11.2018 15:33:02"
taiwan_time <- ymd_hms("西元2019年4月12日 12點55分30秒")
oslo_time <- ymd_hms("18.11.2018 15:33:02")
ymd_hms(
)
library(lubridate)
two_times<-c(
taiwan_time <- ymd_hms("`西元2019年4月12日 12點55分30秒`")
oslo_time <- ymd_hms("18.11.2018 15:33:02"))
two_times<-c(
taiwan_time <- ymd_hms("西元2019年4月12日 12點55分30秒")
oslo_time <- ymd_hms("18.11.2018 15:33:02"))
two_times<-c(
taiwan_time <- ymd_hms(`"西元2019年4月12日 12點55分30秒"`)
oslo_time <- ymd_hms("18.11.2018 15:33:02"))
two_times<-c(
taiwan_time <- ymd_hms("西元2019年4月12日 12點55分30秒"),
oslo_time <- ymd_hms("18.11.2018 15:33:02"))
#library(lubridate)
two_times<-c(
(taiwan_time <- ymd_hms("西元2019年4月12日 12點55分30秒")),
(oslo_time <- ymd_hms("18.11.2018 15:33:02"))
)
#library(lubridate)
two_times<-c(
(taiwan_time <- ymd_hms("2019-4月12日 12點55分30秒")),
(oslo_time <- ymd_hms("18.11.2018 15:33:02"))
)
#library(lubridate)
library(lubridate)
two_times<-c(
(taiwan_time <- ymd_hms("2019-4月12日 12點55分30秒")),
(oslo_time <- ymd_hms("18.11.2018 15:33:02"))
)
library(lubridate)
two_times<-c(
(taiwan_time <- ymd_hms("2019-4-12 12:55:30")),
(oslo_time <- ymd_hms("18.11.2018 15:33:02"))
)
library(lubridate)
two_times<-c(
(taiwan_time <- ymd_hms("2019-4-12 12:55:30")),
(oslo_time <- dmy_hms("18.11.2018 15:33:02"))
)
library(lubridate)
two_times<-c(
(taiwan_time <- ymd_hms("2019-4-12 12:55:30")),
(oslo_time <- dmy_hms("18.11.2018 15:33:02"))
)
library(lubridate)
two_times<-c(
(taiwan_time <- ymd_hms("2019-4-12 12:55:30")),
(oslo_time <- dmy_hms("18.11.2018 15:33:02"))
)
library(lubridate)
two_times_chicago<-c(
(
Chicago_time<- ymd_hms("2019-4-12 12:55:30")
)
# two_times_chicago
library(lubridate)
two_times_chicago<-c(
(
Chicago_time<- ymd_hms("2019-4-12 12:55:30"),
library(lubridate)
two_times_chicago<-c(
(
(Chicago_time<- ymd_hms("2019-4-12 12:55:30"))
)
# two_times_chicago
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
str(course)<-list(
approve=logi TRUE
str(course)<-list(
approve=logi<-c(TRUE) ,
course =List of 4
str(course)<-list(
`approve`=logi<-c(TRUE) ,
course =List of 4
knitr::opts_chunk$set(echo = F, eval=F)
library(lubridate); library(jsonlite); library(readr)
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
.. ..$ :List of 3
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr9("星期三")
time_slots= num [1:3] 7 8 9
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr9("星期三")
time_slots= num [1:3] 7 8 9
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三")
time_slots= num [1:3] 7 8 9
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三") ,
time_slots= num [1:3] 7 8 9,
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= num [1:3] 7 8 9,
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= num ([1:3] 7 8 9),
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= num([1:3] 7 8 9),
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= num([1:3],7, 8, 9),
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= num<-c(節次, numeric class)
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= num<-c(`節次`,numeric class)
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= num<-c(`節次`,numeric class)
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= c(`節次`,numeric class)
str(course)<-
list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= c(`節次`,numeric class)
knitr::opts_chunk$set(echo = TRUE)
listExample[[1]]
listExample <-
list(
student="小明",
`學期`=list(
`108-1`=list(
list(
name="個體經濟學",
teacher="Alice",
grade=85
)
),
`108-2`=list(
list(
name="總體經濟學",
teacher="Mark",
grade=78
)
)
)
)
# 有多少位置可選：
length(listExample)
listExample[[1]]
listExample[[2]]
library(lubridate)
library(lubridate)
two_times_chicago<-c(
(
Chicago_time<- ymd_hms("2019-4-12 12:55:30")
)
)
# two_times_chicago
# 有多少名字可選：
names(listExample)
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
str(newTaipeiCityVaccine)
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
simplifyDataFrame = F) -> newTaipeiCityVaccine
str(newTaipeiCityVaccine)
str(fiveReceipts)
str(fiveReceipts)
str(accidents)
str(accidents)
str(accidents)
str(accidents)
str(accidents)
newTaipeiCityVaccine[[1]]
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[[2]])
str(newTaipeiCityVaccine$success)
vectorExample[[1]]
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
name(vectorExample)
vectorExample <- c("小明","小英","大雄")
# 有多少位置可選：
length(vectorExample)
str(vectorExample)
str(newTaipeiCityVaccine[[2]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])
str(newTaipeiCityVaccine[[2]],max.level = 1)
str(newTaipeiCityVaccine$result,max.level = 1)
str(newTaipeiCityVaccine[["success"]])
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
# 有多少名字可選：
names(listExample)
listExample$student
#listExample$`學期` # 特殊命名依然要用反頓點呼叫
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
vectorExample[[1]]
vectorExample[[3]]
# 顯示到第一層
str(listExample, max.level=1)
#listExample[c(1,2)]
course<-  list(
approve=logi<-c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= c(`節次`,numeric class)
course<-  list(
approve=c(TRUE) ,
course <-List (
coursename=chr("會計學") ,
type      =chr ("必"),
credits   = num (3),
time_place=List<-(
List (
weekday  = chr("星期三"),
time_slots= c(`節次`,numeric class)
course<-  list(
approve=c(TRUE) ,
course <-List (
coursename="會計學",
type      ="必",
credits   = 3,
time_place=List(
List (
weekday  = "星期三",
time_slots=c(7,8,9) ,
classroom = "商2F05"
))
)
)
course<-  list(
approve=c(TRUE) ,
course <-List (
coursename="會計學",
type      ="必",
credits   = 3,
time_place=List(
weekday  = "星期三",
time_slots=c(7,8,9) ,
classroom = "商2F05"
)
)
)
course<-  list(
approve=c(TRUE) ,
course <-list (
coursename="會計學",
type      ="必",
credits   = 3,
time_place=list(
weekday  = "星期三",
time_slots=c(7,8,9) ,
classroom = "商2F05"
)
)
)
))
course<-  list(
approve=c(TRUE) ,
course <-list (
coursename="會計學",
type      ="必",
credits   = 3,
time_place=list(
weekday  = "星期三",
time_slots=c(7,8,9) ,
classroom = "商2F05"
)
)
)
)
course<-  list(
approve=c(TRUE) ,
course <-list (
coursename="會計學",
type      ="必",
credits   = 3,
time_place=list(
weekday  = "星期三",
time_slots=c(7,8,9) ,
classroom = "商2F05"
)
)
)
course<-  list(
approve=c(TRUE) ,
course <-list (
coursename="會計學",
type      ="必",
credits   = 3,
time_place=list(
weekday  = "星期三",
time_slots=c(7,8,9) ,
classroom = "商2F05"
)
)
)
str(course)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
#str(listExample, max.level=1)
listExample[c(1,2)]
# 顯示到第一層
str(listExample, max.level=1)
str(listExample[c(1,2)], max.level=1)
str(listExample[c(2,1)], max.level=1)
# 顯示到第一層
str(listExample, max.level=1)
listExample[c("學期")]
listExample[c("student","學期")]
#臺北市夜市資料
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
#任選幾個夜市元素出來。
View(params)
View(taipeiNightMarkets)
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
str(listExample[c(F,T)]), # 不要，要
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
names(taipeiNightMarkets)
names(taipeiNightMarkets),
names(taipeiNightMarkets),
names(taipeiNightMarkets)
taipeiNightMarketsc(T,F,F,F,T,F,F,F,F,T,F,F,F,T)->selectmarrket
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)->selectmarket
str(taipeiNighTMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)]),
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)->selectmarket
str(taipeiNighTMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1),
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)->selectmarket
str(taipeiNighTMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1)
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)->selectmarket,
names(taipeiNightMarkets)
c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)->selectedMrket
str(taipeiNighTMarkets[c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1)
