#print(receipts300)
#sum(receipts300)
#sum300<-receipts300
#as.integer(receipts300)
# sum300
post[[5]]$DateTime
category_DateTime
category_DateTime<-post[[5]]$DateTime
# post
category_DateTime<-post[[5]]$DateTime
print(category_DateTime)
# post
knitr::opts_chunk$set(echo = TRUE)
a %% b
sequenceNums <- c(11, 6, 8, 11, 12, 11, 3, 7, 10, 8)
print(sequenceNums)
sequenceNums %% 2 # 餘數為1則是奇數，0則是偶數
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
View(params)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
View(badEmployers)
violatedArticles (class character)
violatedArticles (class character)
str(class character)
str(badEmployers)
# violatedArticles
fromJSON("https://data.ntpc.gov.tw/od/data/api/CB6C96C8-D514-42EA-8591-0F4447E79C91?$format=json") -> badEmployers
badEmployers$law
str(badEmployers)
# violatedArticles
#badEmployers$law
order(badEmployers$law)
str(badEmployers)
# violatedArticles
class(badEmployers$law)
str(badEmployers)
# violatedArticles
badEmployers$law
str(badEmployers)
# violatedArticles
list(badEmployers$law)
#str(badEmployers)
# violatedArticles
duplicated(badEmployers$law)
#str(badEmployers)
# violatedArticles
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
unique(badEmployers$law)
#str(badEmployers)
# violatedArticles
violatedArticles (class character)<-unique(badEmployers$law)
violatedArticles <-unique(badEmployers$law)
#str(badEmployers)
# violatedArticles
violatedArticles <-unique(badEmployers$law)
str(violatedArticles)
# violatedArticles
violatedArticles$class character <-unique(badEmployers$law)
violatedArticles <-unique(badEmployers$law)
str(violatedArticles)
# violatedArticles
table(violatedArticles)
# table_countsByArticle
table_countsByArticle<-table(violatedArticles)
# table_countsByArticle
table_countsByArticle<-table(violatedArticles)
names(table_countsByArticle)
# table_countsByArticle
violatedArticles <-unique(badEmployers$law)
print(violatedArticles)
# violatedArticles
table_countsByArticle
table_countsByAricle<-c()
# mostViolatedArticle
table_countsByArticle<-table(badEmployers$law)
names(table_countsByArticle)
# table_countsByArticle
badEmployers$law
table_countsByAricle<-c(F,F,F,F,T,T)
# mostViolatedArticle
badEmployers$law
#table_countsByAricle<-c(F,F,F,F,T,T)
# mostViolatedArticle
max(badEmployers$law)
#table_countsByAricle<-c(F,F,F,F,T,T)
# mostViolatedArticle
violatedArticles <-unique(badEmployers$law)
print(violatedArticles)
# violatedArticles
table_countsByArticle<-table(badEmployers$law)
#names(table_countsByArticle)
# table_countsByArticle
table_countsByArticle<-table(badEmployers$law)
#names(table_countsByArticle)
# table_countsByArticle
table_countsByArticle<-table(badEmployers$law)
#names(table_countsByArticle)
# table_countsByArticle
table_countsByArticle<-table(badEmployers$law)
print(table_countsByArticle)
#names(table_countsByArticle)
# table_countsByArticle
max(table_countsByArticle)
#table_countsByAricle<-c(F,F,F,F,T,T)
# mostViolatedArticle
max(table_countsByArticle)
#table_countsByAricle<-c(F,F,F,F,T,T)
# mostViolatedArticle
numeric(table_countsByArticle    )
count.fields(table_countsByArticle)
max(table_countsByArticle)
table_countsByAricle<-c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)
# mostViolatedArticle
#max(table_countsByArticle)
table_countsByAricle<-c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByAricle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByAricle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
names(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByAricle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
names(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByAricle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByAricle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByAricle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-badEmployers$law[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
#mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F)]
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
#max(table_countsByArticle)
mostViolatedArticle<-table_countsByArticle[c(F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F)]
#print(mostViolatedArticle)
names(mostViolatedArticle)
as.integer(mostViolatedArticle)
# mostViolatedArticle
max(badEmployers$dt)
# popularSentenceMonth
library(lubridate)
popularSentenceMonth <-
max(badEmployers$dt)
max(badEmployers$dt)
# popularSentenceMonth
library(lubridate)
popularSentenceMonth <-
max(badEmployers$dt)
max(badEmployers$dt)
# popularSentenceMonth
library(lubridate)
popularSentenceMonth <-
max(badEmployers$dt)
max(popularSentenceMonth)
# popularSentenceMonth
library(lubridate)
popularSentenceMonth <-
max(badEmployers$dt)
max(popularSentenceMonth)
# popularSentenceMonth
library(lubridate)
popularSentenceMonth <-
max(badEmployers$dt)
print(popularSentenceMonth)
# popularSentenceMonth
badEmployers$lawContent
# mostViolatedArticle_content
table(badEmployers$lawContent)
# mostViolatedArticle_content
table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
# mostViolatedArticle_content
table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
print(mostViolatedArticle_content)
# mostViolatedArticle_content
table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
names(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
names(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
names(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
print(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
print(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
names(mostViolatedArticle_content)
# mostViolatedArticle_content
table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
names(mostViolatedArticle_content)
# mostViolatedArticle_content
table(badEmployers$lawContent)
mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
names(mostViolatedArticle_content)
# mostViolatedArticle_content
table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
mostViolatedArticle_content<- "延長工作時間超過法令規定"
names(mostViolatedArticle_content)
# mostViolatedArticle_content
table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
mostViolatedArticle_content<-c("延長工作時間超過法令規定" )
names(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
mostViolatedArticle_content<-c("延長工作時間超過法令規定" )
names(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
mostViolatedArticle_content<-c("延長工作時間超過法令規定" )
names(mostViolatedArticle_content)
# mostViolatedArticle_content
#table(badEmployers$lawContent)
#mostViolatedArticle_content<-badEmployers$lawContent[c(F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,F,T,F,F,F,F,F,F)]
mostViolatedArticle_content<-c("延長工作時間超過法令規定" )
print(mostViolatedArticle_content)
# mostViolatedArticle_content
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
library(lubridate)
popularSentenceMonth <-
max(lubridate::ymd(badEmployers$dt))
print(popularSentenceMonth)
# popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
oordered(table)
ordered(table)
ordered(class)
ordered(class)
ordered(class)
ordered(class)
ordered(class)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr)
library(lubridate)
popularSentenceMonth <-
max(lubridate::ymd(badEmployers$dt))
print(popularSentenceMonth)
# popularSentenceMonth
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
factor( table
)
factor( students10)
read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
#source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
#read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
#read_csv("https://www.dropbox.com/s/xjzg1iuuws7tcha/table.csv?dl=1") -> table
source("https://www.dropbox.com/s/5oy56om4q0857tt/student10.R?dl=1",encoding = "UTF-8")
factor( students10)
print(students10)
# chinese
print(table)
# chinese
str(table)
# chinese
factor(table$國文)
# chinese
#factor(table$國文)
ordered(table$國文)
# chinese
factor(
table$國文,
levels=c("76.59 - 100.00", "71.12-76.58", "65.65 -  71.11","65.65 -71.11"),
ordered = T # 設定為可排序factor
)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#  )
str(table$國文)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#  )
print(table$國文)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
print(table$國文)
chinese <-
ordered(table$國文)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
chinese <-
ordered(table$國文)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
chinese <-ordered(table$國文)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
chinese <-ordered(table$國文)
str(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
chinese <-ordered(table$國文)
print(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
chinese <-ordered(table$國文)
typeof(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
chinese <-ordered(factor(table$國文))
(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
chinese <-ordered(factor(table$國文))
typeof(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
factor(table$國文)
chinese <-ordered(factor(table$國文))
typeof(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
factor(table$國文)
#chinese <-ordered(factor(table$國文))
#typeof(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
#factor(table$國文)
chinese <-ordered(table$國文)
#typeof(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
#factor(table$國文)
chinese <-ordered(table$"國文")
#typeof(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
#factor(table$國文)
chinese <-ordered(table$"國文")
typeof(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
#factor(table$國文)
chinese <-ordered(table$"國文")
print(chinese)
# chinese
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
#factor(table$國文)
chinese <-ordered(table$"國文")
chinese=list("76.59 - 100.00"=16
"71.12 -  76.58"=15)
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
#factor(table$國文)
chinese <-ordered(table$"國文")
#chinese<-list("76.59 - 100.00"=16
"71.12 -  76.58"=15)
#factor(
#    table$國文,
#    levels=c("76.59 - 100.00"=, "71.12-76.58", "65.65 -  #71.11","65.65 -71.11"),
#    ordered = T # 設定為可排序factor
#)
#print(table$國文)
#factor(table$國文)
chinese <-ordered(table$"國文")
#chinese<-list("76.59 - 100.00"=16
#              "71.12 -  76.58"=15)
str(chinese)
# chinese
ntpu_namelist<-students10$姓名
# ntpu_namelist
ntpu_namelist<-c[[students10$姓名]]
