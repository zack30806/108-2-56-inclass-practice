---
title: "hw5-2"
author: "Zack Lin"
date: "2020/5/19"
output: html_document
---

---
title: "hw5-2"
author: "Zack Lin"
date: "2020/5/18"
output: html_document
---
# 題目
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = F, eval=F)
library(jsonlite); library(lubridate); library(readr); library(stringr); 
```
## 1 平均身高  
以下是來自政府開放資料平台的台灣[學生5-16歲身高平均值](https://data.gov.tw/dataset/6283)
```{r data1}
jsonlite::fromJSON("https://www.dropbox.com/s/es19f62rijrd8i7/studentHeight.json?dl=1") -> studentHeights
print(studentHeights)
```

### 1.1  類別調整
請將「學年度」及「年齡」都改成ordered factor, levels順序以其文字數值從小排到大。( 答案物件studentHeights本身)

```{r ans11}
#factor(studentHeights$學年度)
#factor(studentHeights$年齡)
#semester<-as.integer(studentHeights)
#levels(studentHeights$`學年度`)
#semesterranking <- sort(studentHeights$`學年度`, decreasing=T)
studentHeights$`學年度` <-
  factor(
    studentHeights$`學年度`,
    ordered=TRUE
  )
studentHeights$`學年度`
studentHeights$`年齡` <-
  factor(
    studentHeights$`年齡`,
    ordered=TRUE
  )
levels(studentHeights$`年齡`)
studentHeights$`年齡`
# studentHeight
```

### 1.2 年齡層
請在studentHeights新增「年齡層」元素（class ordered factor），其類別排序為6-8 < 9-12 < 13-15三類年齡層。
```{r ans12}
studentHeights$`年齡層` <- factor(studentHeights$`年齡層`, c("6-8","9-12","13-15"))
levels(studentHeights$`年齡層`)
# studentHeights$`年齡層`
```

### 1.3 各年齡層平均身高
請創造一個named numeric vector, averageHeightByGroup (class numeric, length=3) 其值分別是三組年齡層各自所包含年齡下不分性別身高的平均（即第一個值是所有6-8歲不分學年度、不分性別身高（總計身高）的平均，再來是9-12歲，最後是13-15歲），而此vector的元素名稱也分別是"6-8", "9-12", "13-15" (hint: 數值向量x元素平均, 可用mean(x)求得； 這題也考驗同學組合數個「要不要」向量`pick_XXX`)

```{r ans13}
pick6_8<-studentHeights$`年齡層`=="6-8"
mean(studentHeights$`平均身高`[pick6_8])
pick9_12<-studentHeights$`年齡層`=="9-12"
mean(studentHeights$`平均身高`[pick9_12])
pick13_15<-studentHeights$`年齡層`=="13-15"
mean(studentHeights$`平均身高`[pick13_15])
# averageHeightByGroup
```

### 1.4 性別差異
請創造一個named numeric vector, genderDifferenceByAge (class numeric, length=3) 其值分別是三組年齡層各自所包含年齡下的「男性平均」減去「女性平均」（即第一個值是所有6-8歲不分學年度的男女平均差異，再來是9-12歲，最後是13-15歲），而此vector的元素名稱也分別是"6-8", "9-12", "13-15" (hint: 數值向量x元素平均, 可用mean(x)求得)

```{r ans14}
boys<-studentHeights$`類別`=="男"
girls<-studentHeights$`類別`=="女"
mean(studentHeights$`平均身高`[pick6_8&boys])->boysA
mean(studentHeights$`平均身高`[pick6_8&girls])->girlsA

mean(studentHeights$`平均身高`[pick9_12&boys])->boysB
mean(studentHeights$`平均身高`[pick9_12&girls])->girlsB

mean(studentHeights$`平均身高`[pick13_15&boys])->boysC
mean(studentHeights$`平均身高`[pick13_15&girls])->girlsC

heightDifferenceByGroup<-c(boysA-girlsA,boysB-girlsB,boysC-girlsC)
heightDifferenceByGroup
# heightDifferenceByGroup
```


## 2 各學系

```{r data2}
jsonlite::fromJSON("https://www.dropbox.com/s/bp0w8tjgrhi79x7/sameMajorDifferentWritings.json?dl=1") -> differentMajors
print(differentMajors)
```

### 2.1 改系名
請寫下「一個」字串的regex字串向量，稱之為realEstateRegex （class character, length=1）,

```{r ans21}

realEstateRegex <- stringr::str_extract(
  level_names,
  "不動系"
)
# realEstateRegex

```

使得執行以下程序後differentMajors裡屬「不動產與城鄉環境學系（不管何種寫法）」的都會變成"不動系"。這裡regex還有一個限制考驗，就是：「不動產與城鄉環境學系」的十個字都只會出現一次（所以不能寫"(不動系|不動產系|...)"之類的——不、動、系三字出現二次，違規）。(hint: 這題使用regex quantifier裡的`?`會容易很多)
```{r}
str_replace(differentMajors,realEstateRegex,"不動系")
```



### 2.2 factor levels
直接將differentMajors轉成factor, 並將它的levels存在currentLevels（class character）。（雖然同系有不同叫法而形成好幾個levels，這題不用去整併它。）
```{r ans22}
factor(differentMajors)
currentLevels<-levels(differentMajors)
# currentLevels
```


### 2.3 商學院
請寫下「一個」字串的regex（class character, length=1）稱之為bSchoolRegex,

```{r ans23}
bSchoolRegex<-"休閒與運動管理學系|休運系|金融與合作經營學系|金融系|金融與合作學系"
# bSchoolRegex
```

使得執行以下程序後currentLevels裡屬商學院的系都會變成"商學院"。（其實此題也可以要求第一題的限制，但怕難度太高這題則不設「系名字元不重覆」的限制）
```{r}
str_replace(currentLevels,bSchoolRegex,"商學院")
```



### 2.4 改所有系名
請統一differentMajors裡的系名如下：
  休運系，金融系，經濟系，社會系，社工系，公行系，不動系
  
這題不限方法或regex使用次數。（答案物件differentMajors本身, class factor）
```{r ans24}
real_estate<-"不動系|不動產城鄉系|不動產與城鄉環境學系"
public<-"公行系|公共行政暨政策學系|公共行政系"
socialworking<-"社工系|社會工作系"
society<-"社會系|社會學系"
economics<-"經濟系|經濟學系"
finance<-"金融與合作經營學系|金融系|金融與合作學系"
leisure<-"休閒與運動管理學系|休運系"

differentMajors<-str_replace(differentMajors,real_estate,"不動系")
differentMajors<-str_replace(differentMajors,public,"公行系")
differentMajors<-str_replace(differentMajors,socialworking,"社工系")
differentMajors<-str_replace(differentMajors,society,"社會系")
differentMajors<-str_replace(differentMajors,economics,"經濟系")
differentMajors<-str_replace(differentMajors,finance,"金融系")
differentMajors<-str_replace(differentMajors,leisure,"休運系")
levels(differentMajors)


# differentMajors
```


### 2.5 學院factor
另創一個school物件（class factor），它的每個元素對應differentMajors學系所屬之學院：

  * 商學院：包含休運系，金融系
  
  * 社科院：包含經濟系，社會系，社工系
  
  * 公共事務學院： 包含公行系，不動系

即levels(school)會有「公共事務學院、商學院、社科院」。

```{r ans25}
"商學院"
# school
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
