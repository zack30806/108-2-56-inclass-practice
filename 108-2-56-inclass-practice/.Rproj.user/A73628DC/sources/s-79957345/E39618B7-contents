---
title: '20200408'
author: "Zack Lin"
date: "2020/4/11"
output: html_document
---
第 4 章 Operation on vector and list
4.1 選取元素
4.1.1 選「一個元素」
4.1.1.1 用位置選[[.]]
用位置選：object_name[[i]]
```{r}
vectorExample <- c("小明","小英","大雄")

# 有多少位置可選：
length(vectorExample)
str(vectorExample)
```
```{r}
vectorExample[[1]]
vectorExample[[3]]
```


```{r}
listExample <- 
  list(
    student="小明",
    `學期`=list(
      `108-1`=list(
        list(
          name="個體經濟學",
          teacher="Alice",
          grade=85
        )
      ),
      `108-2`=list(
        list(
          name="總體經濟學",
          teacher="Mark",
          grade=78
        )
      )
    )
  )
# 有多少位置可選：
length(listExample)


listExample[[1]]
listExample[[2]]
```

4.1.1.2 用名字選$.
```{r}
# 有多少名字可選：
names(listExample)
```
```{r}
listExample$student
listExample$`學期` # 特殊命名依然要用反頓點呼叫
```

```{r}
fromJSON("http://data.ntpc.gov.tw/api/v1/rest/datastore/382000000A-000157-002",
         simplifyDataFrame = F) -> newTaipeiCityVaccine
```

```{r}
str(newTaipeiCityVaccine)
length(newTaipeiCityVaccine)
names(newTaipeiCityVaccine)
```
```{r}
str(newTaipeiCityVaccine[[1]])
str(newTaipeiCityVaccine$success)
str(newTaipeiCityVaccine[["success"]])

str(newTaipeiCityVaccine[[2]],max.level = 1)
str(newTaipeiCityVaccine$result,max.level = 1)
str(newTaipeiCityVaccine[["success"]])

```
4.1.2.1 用位置選[c(...)]
```{r}
vectorExample
vectorExample[c(1,3)]
vectorExample[c(3,2,1)] # 產生重新排列效果
```
```{r}
# 顯示到第一層
str(listExample, max.level=1)

str(listExample[c(1,2)], max.level=1)
str(listExample[c(2,1)], max.level=1)
```
任選數筆tainanSportsMap的運動地點。
```{r}

```
4.1.2.2 用名字選[c("name1","name2",...)]
```{r}
# 顯示到第一層
str(listExample, max.level=1)

listExample[c("學期")]
listExample[c("student","學期")]
```
```{r}
#臺北市夜市資料
fromJSON("https://www.dropbox.com/s/qnm9bnz7vccrvcz/taipeiNightMarkets.json?dl=1", simplifyDataFrame = F) -> taipeiNightMarkets
#任選幾個夜市元素出來。

#tapeiNightMarkets[c
```
4.1.2.3 用「要/不要」邏輯向量選[c(T,T,F,...)]
```{r}
vectorExample
vectorExample[c(T,T,F)] # 要，要，不要
```

```{r}
str(listExample[c(F,T)]) # 不要，要
str(listExample[c(T,T)]) # 要，要
```
用「要/不要」邏輯向量自taipeiNightMarkets選出 寧夏觀光夜市，西昌街觀光夜市，大龍街夜市， 雙城街夜市。
```{r}
names(taipeiNightMarkets)

c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)->selectedMrket

str(taipeiNightMarkets
    [c(T,F,F,F,T,F,F,F,F,T,F,F,F,T)],max.level = 1)

```
```{r}
str(listExample)
listExample: length=2, list class
  |
  |--student: length=1, character class
  |
  |--學期: length=3, list class
```



4.1.3 連鎖選取
```{r}
numVector <- c(2,3,6,-1,4,2,6)
select1 <- numVector[c(1,4)]; select1
select2 <- select1[[1]]; select2

# 相當於
numVector[c(1,4)][[1]]
```

```{r}
select1 <- numVector[c(T,T,F,T,F,F,T)]; select1
select2 <- select1[c(1,4)]; select2

# 相當於
numVector[c(T,T,F,T,F,F,T)][c(1,4)]
```















```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.

When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:

```{r cars}
summary(cars)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}
plot(pressure)
```

Note that the `echo = FALSE` parameter was added to the code chunk to prevent printing of the R code that generated the plot.
